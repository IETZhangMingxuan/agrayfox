[{"id":1,"createtime":"2020年03月03日","tags":"vue","type":"前端","title":"Vue项目中实现图片懒加载","intro":"","author":"Grayfox","content":"<!DOCTYPE html><html lang=\"en\"><head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Vue项目中实现图片懒加载</title> <style> .content { width: 770px; color: #555666; font-family: 'microsoft yahei'; font-size: 16px; font-weight: 400; margin-left: 5px; } .content .preface { width: 720px; background-color: #EEF0F4; padding: 7px 20px; color: #555666; line-height: 30px; position: relative; font-weight: 400; font-size:16px; } .content .preface:hover { cursor: text; } .content .preface::before { position: absolute; left: 0px; top: 0px; content: ''; width: 5px; height: 100%; background-color: #DDDFE4; } .content .preh3 { padding: 0 0 15px 0; } .content h3 { color: #333; padding: 15px 0; } .content img { width: 750px; border-radius: 10px; margin-top: 5px; } .content p { padding: 10px 0; color: #555666; font-weight: 700; font-size:16px; cursor: pointer; } .content span { font-weight: 700; } .content p:hover { color: #333; } .content .first { padding-top: 15px; } .content a { display: block; padding: 15px 0 0 0; text-decoration: none; color: #409eef; } .content .showpic { width: 760px; display: block; margin-bottom: 15px; margin-top: -25px; } .content #prev1 { display: block; width: 200px; } .content #prev2 { display: block; width: 500px !important; margin-top: 20px; } .content a { padding: 10px; } .content .ojbk { margin-top: -10px; } </style></head><body> <div class=\"content\"> <img src=\"../images/0007.jpg\" alt=\"0007\" class=\"showpic\"> <h3 class=\"preh3\">前言</h3> <p class=\"preface\"> 对于图片过多的页面,为了提高页面的加载速度,很多时候我们需要将页面内未出现在可视区域内的图片先不做加载,等到滚动到可视区域后再去加载.这样子对于页面加载性能上会有很大的提升,也提高了用户体验 </p> <h3>实现方法(使用Vue的vue-lazyload插件)</h3> <p class=\"first\">一.安装插件</p> <img src=\"../images/0001.png\" alt=\"0001\"> <p>二.在入口文件main.js中引入</p> <img src=\"../images/0002.png\" alt=\"0002\"> <p>三.直接使用</p> <img src=\"../images/0003.png\" alt=\"0003\"> <p>或者添加自定义选项</p> <img src=\"../images/0004.png\" alt=\"0004\"> <p>四.修改图片显示方式为懒加载(将:src属性直接改为v-lazy)</p> <img src=\"../images/0005.png\" alt=\"0005\"> <p>五.参数选项说明</p> <img src=\"../images/0006.png\" alt=\"0006\"> <p>六.vue-lazyload官网 <a href=\"https://www.npmjs.com/package/vue-lazyload\">点此链接</a> <p>至此，一个简单的vue图片懒加载就完成了</p> </div></body></html>","hot":1289,"zan":46},{"id":2,"createtime":"2020年03月12日","tags":"node","type":"后端","title":"解决XShell关闭后远端服务器服务中断的问题","intro":"","author":"Grayfox","content":"<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\"content=\"IE=edge\"><meta name=\"viewport\"content=\"width=device-width, initial-scale=1.0\"><title>如何让xshell关闭后依然运行node项目</title><style>.content{width:770px;color:#555666;font-family:'microsoft yahei';font-size:16px;font-weight:400;margin-left:5px;margin-top:-30px}.content.preface{width:720px;background-color:#EEF0F4;padding:7px 20px;color:#555666;line-height:30px;position:relative;font-weight:400;font-size:16px}.content.preface:hover{cursor:text}.content.preface::before{position:absolute;left:0px;top:0px;content:'';width:5px;height:100%;background-color:#DDDFE4}.content.preh3{padding:0 0 15px 0}.content h3{color:#333;padding:15px 0}.content img{width:750px;border-radius:10px;margin-top:5px}.content p{padding:10px 0;color:#555666;font-weight:700;font-size:16px;cursor:pointer}.content span{font-weight:700}.content p:hover{color:#333}.content.first{padding-top:15px}.content a{display:block;padding:15px 0 0 0;text-decoration:none;color:#409eef}.content.showpic{width:760px;display:block;margin-bottom:15px;margin-top:-5px}.content#prev1{display:block;width:200px}.content#prev2{display:block;width:500px!important;margin-top:20px}.content a{padding:10px}.content.ojbk{margin-top:-10px}</style></head><body><div class=\"content\"><h3 class=\"preh3\">前言</h3><p class=\"preface\">将代码部署到服务器的代码目录,这里要注意,如果直接用命令npm start或node app.js启动服务,则一旦退出ssh远程登陆,nodeapp就会停止运行.</p><h3>解决办法一:使用nohup命令</h3><p class=\"first\">1.打开XShell连接远端服务器,在控制台中输入下列代码,默认运行文件名为app.js</p><img src=\"../images/0101.png\"alt=\"0101\"><p>2.项目确认可以成功运行后,按ctrl+c关闭服务.然后在控制台输入下列代码</p><img src=\"../images/0102.png\"alt=\"0102\"><p>3.然后再输入exit退出命令,这样,在关闭XShell后,node项目就会依然执行.如果想通过XShell命令停止node服务,可以用一个命令</p><img src=\"../images/0103.png\"alt=\"0103\"><p>不过这样会杀死所有的node进程,如果你仅仅想关闭一个node进程,比如3000端口的node进程,可以先查看一下指定端口下的node进程</p><img src=\"../images/0104.png\"alt=\"0104\"><p>然后就会看到3000端口下运行的进程,其中包含pid信息,执行如下代码,就可以杀死该进程</p><img src=\"../images/0105.png\"alt=\"0105\"><h3>解决办法二:使用forever或者pm2</h3><p>forever和pm2的区别:</p><span>forever管理多个站点,每个站访问量不大,不需要监控</span><p>pm2网站访问量比较大,需要完整的监控界面</p><p>使用forever的命令</p><img src=\"../images/0106.png\"alt=\"0106\"><p>使用pm2的命令</p><img src=\"../images/0107.png\"alt=\"0107\"><p>如果安装完全局forever/pm2,使用forever/pm2命令出错请确认提示的目录在你的path里?如/root/node-v4.5.0-linux-x64/bin是否在你的path里(run echo $PATH to check)?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果不在请添加下面一行在~/.bash_profile.</p><img src=\"../images/0108.png\"alt=\"0108\"><img src=\"../images/0109.png\"alt=\"0109\"><p>这样,依靠以上两种方法就可以解决我们的问题了,不过还要提一点,如果你的运行文件中连接了数据库,如MySQL MongoDB等,还会出现另一个问题.就是数据库有一个机制,如果你对数据库长时间没有操作,那么它就会自动断开连接,从而你的运行服务也就失效了,这个问题我们下节再议.</p></div></body></html>","hot":1327,"zan":17},{"id":3,"createtime":"2020年03月24日","tags":"vue","type":"前端","title":"利用vue-clipboard2实现剪切板的功能","intro":"","author":"Grayfox","content":"<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\"content=\"IE=edge\"><meta name=\"viewport\"content=\"width=device-width, initial-scale=1.0\"><title>利用vue-clipboard2实现剪切板的功能</title><style>.content{width:770px;color:#555666;font-family:'microsoft yahei';font-size:16px;font-weight:400;margin-left:5px;margin-top:-30px}.content.preface{width:720px;background-color:#EEF0F4;padding:7px 20px;color:#555666;line-height:30px;position:relative;font-weight:400;font-size:16px}.content.preface:hover{cursor:text}.content.preface::before{position:absolute;left:0px;top:0px;content:'';width:5px;height:100%;background-color:#DDDFE4}.content.preh3{padding:0 0 15px 0}.content h3{color:#333;padding:15px 0}.content img{width:750px;border-radius:10px;margin-top:5px}.content p{padding:10px 0;color:#555666;font-weight:700;font-size:16px;cursor:pointer}.content span{font-weight:700}.content p:hover{color:#333}.content.first{padding-top:15px}.content a{display:block;padding:15px 0 0 0;text-decoration:none;color:#409eef}.content.showpic{width:760px;display:block;margin-bottom:15px;margin-top:-5px}.content#prev1{display:block;width:300px}.content#prev2{display:block;width:500px!important;margin-top:20px}.content a{padding:10px}.content.ojbk{margin-top:-10px}</style></head><body><div class=\"content\"><h3 class=\"preh3\">前言</h3><p class=\"preface\">在浏览网页的时候经常会看到很多好的内容,需要复用一下;当然可以直接选中复制.但有些时候站长会直接提供复制的功能,这是如何实现的呢?vue-cliboard2就是专门用于该功能的.</p><p class=\"first\">1.安装vue-clipboard2库</p><img src=\"../images/0201.png\"alt=\"0201\"><p>2.在main.js文件中引入使用</p><img src=\"../images/0202.png\"alt=\"0202\"><p>3.使用</p><p class=\"ojbk\">3-1.使用方式一:个人推荐</p><img src=\"../images/0203.png\"alt=\"0203\"><p>效果如下</p><img src=\"../images/0204.png\"alt=\"0204\"id=\"prev1\"><img src=\"../images/0205.png\"alt=\"0205\"id=\"prev2\"><p>3-2.使用方式二</p><img src=\"../images/0206.png\"alt=\"0206\"><p>4.API</p><a href=\"https://www.npmjs.com/package/vue-clipboard2\"target=\"_blank\">点此链接</a></div></body></html>","hot":1536,"zan":38},{"id":4,"createtime":"2020年03月28日","tags":"life","type":"生活","title":"分享一个音乐游戏站点","intro":"","author":"Grayfox","content":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>1</title>\n    <style>\n        .content {\n            width: 770px;\n            color: #555666;\n            font-family: 'microsoft yahei';\n            font-size: 16px;\n            font-weight: 400;\n            margin-left: 5px;\n            margin-top:-30px;\n        }\n\n        .content.preface {\n            width: 720px;\n            background-color: #EEF0F4;\n            padding: 7px 20px;\n            color: #555666;\n            line-height: 30px;\n            position: relative;\n            font-weight: 400;\n            font-size: 16px\n        }\n\n        .content.preface:hover {\n            cursor: text\n        }\n\n        .content.preface::before {\n            position: absolute;\n            left: 0px;\n            top: 0px;\n            content: '';\n            width: 5px;\n            height: 100%;\n            background-color: #DDDFE4\n        }\n\n        .content.preh3 {\n            padding: 0 0 15px 0;\n            margin-top:-30px;\n        }\n\n        .content h3 {\n            color: #333;\n            padding: 15px 0\n        }\n\n        .content img {\n            width: 750px;\n            border-radius: 10px;\n            margin-top: 5px\n        }\n\n        .content p {\n            padding: 10px 0;\n            color: #555666;\n            font-weight: 700;\n            font-size: 16px;\n            cursor: pointer\n        }\n\n        .content span {\n            font-weight: 700\n        }\n\n        .content p:hover {\n            color: #333\n        }\n\n        .content.first {\n            padding-top: 15px\n        }\n\n        .content a {\n            display: block;\n            padding: 15px 0 0 0;\n            text-decoration: none;\n            color: #409eef\n        }\n\n        .content.showpic {\n            width: 760px;\n            display: block;\n            margin-bottom: 15px;\n            margin-top: -5px\n        }\n\n        .content#prev1 {\n            display: block;\n            width: 300px\n        }\n\n        .content#prev2 {\n            display: block;\n            width: 500px !important;\n            margin-top: 20px\n        }\n\n        .content a {\n            padding: 10px;\n            padding-left:0px;\n        }\n\n        .content.ojbk {\n            margin-top: -10px\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"content\">\n        <h3 class=\"preh3\">网站名字叫Mikutap</h3>\n        <p class=\"preface\">相信有些同学已经从Miku猜出了这是基于初音未来创作的游戏.玩法也十分简单,只需使用鼠标触碰滑动，就可以创作出一首非常好听的电子音乐</p>\n        <img src=\"../images/0401.jpg\" alt=\"0201\" class=\"first\">\n        <p>玩法也十分简单,只需使用鼠标触碰滑动,或者点击键盘,就可以创作出一首非常好听的电子音乐.过程中有各种各样的元素飞过,背景颜色也在不停的变化,搭配上动听的旋律和自己“弹奏”出的电子合成初音未来女声,我们很快就会被这款游戏所吸引.</p>\n        <p>官方网站</p>\n        <a href=\"https://aidn.jp/mikutap/\" target=\"_blank\">点此链接</a>\n    </div>\n</body>\n\n</html>","hot":1627,"zan":23}]